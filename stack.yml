- name: Deploy Coolstore Stack on OCP
  hosts: localhost
  gather_facts: no

  vars:
    k8s_token: "{{ lookup('env','K8S_AUTH_API_KEY') }}"
    k8s_host: "{{ lookup('env','K8S_AUTH_HOST') }}"

  tasks:

    - name: Select Project Size
      set_fact:
        size: "{{ tee_shirt_sizes[project_size] }}"
      vars:
        tee_shirt_sizes: 
          dev: 
            max_pods: 2
            request_cpu: 300m
            request_mem: 2Gi
            limit_cpu: 100m
            limit_memory: 2Gi
          prod:
            max_pods: 4
            request_cpu: 600m
            request_mem: 4Gi
            limit_cpu: 200m
            limit_memory: 4Gi
          perf: 
            max_pods: 8
            request_cpu: 900m
            request_mem: 8Gi
            limit_cpu: 400m
            limit_memory: 8Gi

    - name: Create Coolstore namespace {{ eap_ocp_namespace }}
      k8s:
        state: present
        name: "{{ eap_ocp_namespace }}"
        api_version: project.openshift.io/v1
        kind: Project
        validate_certs: no

    - name: Apply project quota
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'resourceQuota.j2') }}"
        validate_certs: no

    - name: Apply project limit range
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'limitRange.j2') }}"
        validate_certs: no

    - name: Create Coolstore objects in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('file', 'definitions_1.yml') }}"
        validate_certs: no

    - name: Create Coolstore buildConfig in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'buildConfig.j2') }}"
        validate_certs: no

    - name: Create Coolstore objects in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('file', 'definitions_2.yml') }}"
        validate_certs: no

    - name: Create Coolstore secrets in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'jboss_secrets.j2') }}"
        validate_certs: no

    - name: Select Artifact 
      set_fact:
        artifact: "{{ artifact_store | regex_replace('/$','') }}/{{ war_name }}-{{ version }}.war"
 
    - name: Get WAR
      get_url:
        url: "{{ artifact }}"
        dest: /tmp/ROOT.war
        force: yes
      delegate_to: localhost

    - name: Run the build
      shell:  |
        oc login --insecure-skip-tls-verify=true --token={{ k8s_token }} --server={{ k8s_host }}
        oc project {{ eap_ocp_namespace }}
        oc start-build coolstore --from-file=/tmp/ROOT.war --wait=true
      when: run_build | bool

    # The route location is route_name + '-' + namespace + '.apps.' + cluster_url 
    # We use this to demo k8s_info usage
    - name: Get the route
      k8s_facts:
        api_version: v1
        kind: Route
        name: www
        namespace:  "{{ eap_ocp_namespace }}"
        api_key: "{{ k8s_token }}"
        host: "{{ k8s_host }}"
        validate_certs: no
      register: eap_route

    - debug: 
        var: eap_route.resources.0.spec.host

    - name: Smoke Test for 
      uri: 
        url: "http://{{ eap_route.resources.0.spec.host }}"
      register: smoke_test
      until: smoke_test.status == 200
      retries: 20
      delay: 60
      run_once: yes

    - name: Notify Success
      debug: 
        msg:
        - "* Provision Success"
        - "* Reach Application at: http://{{ eap_route.resources.0.spec.host }}"
        verbosity: 0
      run_once: yes