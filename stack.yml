- name: Deploy Coolstore Stack on OCP
  hosts: localhost
  gather_facts: no

  vars:
    k8s_token: "{{ lookup('env','K8S_AUTH_API_KEY') }}"
    k8s_host: "{{ lookup('env','K8S_AUTH_HOST') }}"

  tasks:

    - name: Create Coolstore namespace {{ eap_ocp_namespace }}
      k8s:
        state: present
        name: "{{ eap_ocp_namespace }}"
        api_version: project.openshift.io/v1
        kind: Project
        validate_certs: no

    - name: Create Coolstore objects in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('file', 'definition.yml') }}"
        validate_certs: no

    - name: Create Coolstore buildConfig in {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'buildConfig.j2') }}"
        validate_certs: no

    - name: Create Coolstore secrets {{ eap_ocp_namespace }}
      k8s:
        state: present
        namespace: "{{ eap_ocp_namespace }}"
        definition: "{{ lookup('template', 'jboss_secrets.j2') }}"
        validate_certs: no

    - name: Select Artifact 
      set_fact:
        artifact: "{{ artifact_store | regex_replace('/$','') }}/{{ war_name }}-{{ version }}.war"
 
    - name: Get WAR
      get_url:
        url: "{{ artifact }}"
        dest: /tmp/ROOT.war
        force: yes
      delegate_to: localhost

    - name: Run the build
      shell:  |
        oc login --insecure-skip-tls-verify=true --token={{ k8s_token }} --server={{ k8s_host }}
        oc project {{ eap_ocp_namespace }}
        oc start-build coolstore --from-file=/tmp/ROOT.war --wait=true
      when: run_build | default(true)

    # The route location is route_name + '-' + namespace + '.apps.' + cluster_url 
    # We use this to demo k8s_info usage
    - name: Get the route
      k8s_facts:
        api_version: v1
        kind: Route
        name: www
        namespace:  "{{ eap_ocp_namespace }}"
        api_key: "{{ k8s_token }}"
        host: "{{ k8s_host }}"
        validate_certs: no
      register: eap_route

    - debug: 
        var: eap_route.resources.0.spec.host

    # - name: Smoke Test for 
    #   uri: 
    #     url: "http://"
    #   register: smoke_test
    #   until: smoke_test.status == 200
    #   retries: 10
    #   delay: 10
    #   run_once: yes

    # - name: Notify Success
    #   debug: 
    #     msg:
    #     - "* Provision Success"
    #     - "* Reach Application at: {{ hostvars.fact_store.cat_facts.lb_fqdn }}:{{ az_loadbalancer_fport }}"
    #     verbosity: 0
    #   run_once: yes


    # http://www-demo44.apps.democenter-dcl.azure.clustership.com
